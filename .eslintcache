[{"/home/hazemhemaily/Desktop/projects/covid-19-traker/src/index.js":"1","/home/hazemhemaily/Desktop/projects/covid-19-traker/src/App.js":"2","/home/hazemhemaily/Desktop/projects/covid-19-traker/src/components/cards/cards.jsx":"3","/home/hazemhemaily/Desktop/projects/covid-19-traker/src/components/countrypicker/countrypicker.jsx":"4","/home/hazemhemaily/Desktop/projects/covid-19-traker/src/components/charts/charts.jsx":"5","/home/hazemhemaily/Desktop/projects/covid-19-traker/src/components/index.js":"6","/home/hazemhemaily/Desktop/projects/covid-19-traker/src/api/index.js":"7"},{"size":145,"mtime":1610290624215,"results":"8","hashOfConfig":"9"},{"size":1066,"mtime":1610319821648,"results":"10","hashOfConfig":"9"},{"size":2880,"mtime":1610567137071,"results":"11","hashOfConfig":"9"},{"size":1052,"mtime":1610316368212,"results":"12","hashOfConfig":"9"},{"size":1721,"mtime":1610319538070,"results":"13","hashOfConfig":"9"},{"size":177,"mtime":1610292377499,"results":"14","hashOfConfig":"9"},{"size":1091,"mtime":1610316728013,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ng1ctu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/hazemhemaily/Desktop/projects/covid-19-traker/src/index.js",[],["32","33"],"/home/hazemhemaily/Desktop/projects/covid-19-traker/src/App.js",[],"/home/hazemhemaily/Desktop/projects/covid-19-traker/src/components/cards/cards.jsx",[],"/home/hazemhemaily/Desktop/projects/covid-19-traker/src/components/countrypicker/countrypicker.jsx",["34","35"],"import React, { useEffect, useState } from \"react\";\nimport { FormControl, NativeSelect } from \"@material-ui/core\";\nimport { fetchCountries } from \"../../api\";\nimport styles from \"./countrypicker.module.css\";\nexport default function CountryPicker({handleCountryChange}) {\n  const [option, setOption] = useState(\"Global\");\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    const getCountries = async function () {\n      setOptions(await fetchCountries());\n    };\n\n    getCountries();\n    console.log(options);\n  }, []);\n  return (\n    <div className={styles.container}>\n      <FormControl className={styles.formControl}>\n        <NativeSelect defaultValue = {option} onChange = {(e)=> handleCountryChange(e.target.value)}>\n          <option value={option}> {option}</option>\n          {options.map((country, index) => {\n            return (\n              <option value={country} key={index}>\n                {country}\n              </option>\n            );\n          })}\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n}\n","/home/hazemhemaily/Desktop/projects/covid-19-traker/src/components/charts/charts.jsx",[],"/home/hazemhemaily/Desktop/projects/covid-19-traker/src/components/index.js",[],"/home/hazemhemaily/Desktop/projects/covid-19-traker/src/api/index.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":18,"nodeType":"42","messageId":"43","endLine":6,"endColumn":27},{"ruleId":"44","severity":1,"message":"45","line":15,"column":6,"nodeType":"46","endLine":15,"endColumn":8,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'setOption' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [options]",{"range":"53","text":"54"},[533,535],"[options]"]